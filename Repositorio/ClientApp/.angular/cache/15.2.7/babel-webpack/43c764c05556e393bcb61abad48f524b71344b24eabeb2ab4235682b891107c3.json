{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5098/api/login';\n    // Inicializa el rol desde localStorage si existe\n    const storedRol = localStorage.getItem('rol');\n    this.rolSubject = new BehaviorSubject(storedRol);\n    this.rol$ = this.rolSubject.asObservable();\n  }\n  iniciarSesion(correo, password) {\n    return this.http.post(this.apiUrl, {\n      Correo: correo,\n      Password: password\n    });\n  }\n  guardarRol(rol) {\n    localStorage.setItem('rol', rol);\n    this.rolSubject.next(rol); // Actualiza el estado del rol\n  }\n\n  obtenerRol() {\n    return this.rolSubject.value; // Devuelve el valor actual del rol\n  }\n\n  cerrarSesion() {\n    localStorage.removeItem('rol');\n    this.rolSubject.next(null); // Resetea el estado del rol\n  }\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;;;AAKlD,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJhB,WAAM,GAAG,iCAAiC;IAKhD;IACA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IAC7C,IAAI,CAACC,UAAU,GAAG,IAAIP,eAAe,CAAgBI,SAAS,CAAC;IAC/D,IAAI,CAACI,IAAI,GAAG,IAAI,CAACD,UAAU,CAACE,YAAY,EAAE;EAC5C;EAEAC,aAAa,CAACC,MAAc,EAAEC,QAAgB;IAC5C,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAM,IAAI,CAACC,MAAM,EAAE;MAAEC,MAAM,EAAEJ,MAAM;MAAEK,QAAQ,EAAEJ;IAAQ,CAAE,CAAC;EACjF;EAEAK,UAAU,CAACC,GAAW;IACpBb,YAAY,CAACc,OAAO,CAAC,KAAK,EAAED,GAAG,CAAC;IAChC,IAAI,CAACX,UAAU,CAACa,IAAI,CAACF,GAAG,CAAC,CAAC,CAAC;EAC7B;;EAEAG,UAAU;IACR,OAAO,IAAI,CAACd,UAAU,CAACe,KAAK,CAAC,CAAC;EAChC;;EAEAC,YAAY;IACVlB,YAAY,CAACmB,UAAU,CAAC,KAAK,CAAC;IAC9B,IAAI,CAACjB,UAAU,CAACa,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9B;;;AA5BWnB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAwB,SAAXxB,WAAW;EAAAyB,YAFV;AAAM","names":["BehaviorSubject","AuthService","constructor","http","storedRol","localStorage","getItem","rolSubject","rol$","asObservable","iniciarSesion","correo","password","post","apiUrl","Correo","Password","guardarRol","rol","setItem","next","obtenerRol","value","cerrarSesion","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Jonathan 3.0\\Desktop\\Proyecto-Final-DSW\\Repositorio\\ClientApp\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private apiUrl = 'http://localhost:5098/api/login';\n  private rolSubject: BehaviorSubject<string | null>; // BehaviorSubject para el rol\n  public rol$: Observable<string | null>; // Observable que los componentes pueden suscribirse\n\n  constructor(private http: HttpClient) {\n    // Inicializa el rol desde localStorage si existe\n    const storedRol = localStorage.getItem('rol');\n    this.rolSubject = new BehaviorSubject<string | null>(storedRol);\n    this.rol$ = this.rolSubject.asObservable();\n  }\n\n  iniciarSesion(correo: string, password: string): Observable<any> {\n    return this.http.post<any>(this.apiUrl, { Correo: correo, Password: password });\n  }\n\n  guardarRol(rol: string): void {\n    localStorage.setItem('rol', rol);\n    this.rolSubject.next(rol); // Actualiza el estado del rol\n  }\n\n  obtenerRol(): string | null {\n    return this.rolSubject.value; // Devuelve el valor actual del rol\n  }\n\n  cerrarSesion(): void {\n    localStorage.removeItem('rol');\n    this.rolSubject.next(null); // Resetea el estado del rol\n  }\n}\n\n\n/*\nexport class AuthService {\n  iniciarSesion(correo: string, password: string): Observable<any> {\n    return this.http.post<any>(this.apiUrl, { Correo: correo, Password: password });\n}\n  private apiUrl = 'http://localhost:5098/api/login'; // Endpoint del backend\n  private rol: string | null = null;\n\n  constructor(private http: HttpClient) {}\n\n  login(correo: string, password: string): Observable<any> {\n    return this.http.post(this.apiUrl, { correo, password });\n  }\n\n  setRol(rol: string) {\n    this.rol = rol;\n    localStorage.setItem('rol', rol); // Opcional: guardar en localStorage\n  }\n\n  getRol(): string | null {\n    return this.rol || localStorage.getItem('rol');\n  }\n\n  logout() {\n    this.rol = null;\n    localStorage.removeItem('rol');\n  }\n}\n*/"]},"metadata":{},"sourceType":"module","externalDependencies":[]}